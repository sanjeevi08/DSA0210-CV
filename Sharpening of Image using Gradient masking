import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load the image and convert to grayscale
image = cv2.imread('input.jpg')  # Replace with your image path
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Step 1: Compute Sobel gradients in X and Y directions
sobel_x = cv2.Sobel(gray, cv2.CV_64F, 1, 0, ksize=3)
sobel_y = cv2.Sobel(gray, cv2.CV_64F, 0, 1, ksize=3)

# Step 2: Compute the gradient magnitude (edge mask)
gradient_mask = cv2.magnitude(sobel_x, sobel_y)
gradient_mask = np.uint8(np.clip(gradient_mask, 0, 255))

# Step 3: Add the gradient mask to original image to sharpen
sharpened = cv2.add(gray, gradient_mask)

# Display results
plt.figure(figsize=(12, 5))

plt.subplot(1, 3, 1)
plt.title('Original Image')
plt.imshow(gray, cmap='gray')
plt.axis('off')

plt.subplot(1, 3, 2)
plt.title('Gradient Mask (Edges)')
plt.imshow(gradient_mask, cmap='gray')
plt.axis('off')

plt.subplot(1, 3, 3)
plt.title('Sharpened Image (Gradient Mask)')
plt.imshow(sharpened, cmap='gray')
plt.axis('off')

plt.tight_layout()
plt.show()
